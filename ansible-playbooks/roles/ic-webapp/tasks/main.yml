---
# Nettoyage complet avant installation
- name: Supprimer toutes les sources Docker conflictuelles
  shell: |
    rm -f /etc/apt/sources.list.d/*docker*
    rm -f /etc/apt/sources.list.d/*Docker*
  become: yes

- name: Supprimer les anciennes clés Docker
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/trusted.gpg.d/docker.gpg
    - /etc/apt/keyrings/docker.gpg
  become: yes

- name: Supprimer le dossier des keyrings Docker (s'il existe)
  file:
    path: /etc/apt/keyrings
    state: absent
  become: yes

- name: Nettoyer le cache APT et forcer la mise à jour
  shell: |
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    apt-get update || true
  become: yes

# Préparation
- name: Recréer le dossier keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: yes

- name: Installer les prérequis APT
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  become: yes

# Ajout clé et dépôt Docker
- name: Ajouter la clé GPG officielle Docker
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
  become: yes

- name: Ajouter le dépôt Docker stable
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
    filename: docker
  become: yes

# Installation app 
- name: Installer dépendances de l'application
  apt:
    name:
      - git
      - python3-pip
    state: present
    update_cache: yes
  become: yes
