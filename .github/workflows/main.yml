name: CI/CD Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build artifact
        run: |
          mkdir -p dist
          rsync -av --exclude='dist' ./ dist/

      - name: List dist content before upload
        run: ls -l dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: dist/

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      - name: List dist content after download
        run: ls -l dist

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 host to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy to EC2
        run: scp -r dist ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app/

      - name: Run Ansible Playbook
        run: |
          cd ansible-playbooks
          ansible-playbook -i ansible-inventory.yml playbook/deploy-stack.yml

      - name: Check deployed app availability (non bloquant)
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.EC2_HOST }}:<port>/health || echo "000")
          echo "HTTP status code: $HTTP_STATUS"
          if [ "$HTTP_STATUS" != "200" ]; then
            echo "L'application ne répond pas correctement, vérifier manuellement."
          fi
